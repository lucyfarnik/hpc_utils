#!/usr/bin/env python3

import sys
import argparse
import os

gpu_choices = ["A100", "rtx_3090", "rtx_2080"]
parser = argparse.ArgumentParser()
parser.add_argument('--cpus',    '-c',   type=int, nargs='?', default=1)
parser.add_argument('--gpus',    '-g',   type=int, nargs='?')
parser.add_argument('--hours',   '-t',   type=int, nargs='?', default=1,  help="time in hours")
parser.add_argument('--mins',            type=int, nargs='?', default=0,  help="time in mins")
parser.add_argument('--memory',  '-m',   type=int, nargs='?', default=22, help="memory in gp")
parser.add_argument('--interactive', action='store_true', help="Not used by the user, used internally to error when lint is called with a --cmd argument")

# remove args after --cmd, if present
if "--cmd" in sys.argv:
    cmd_idx = sys.argv.index('--cmd')
    arglist = sys.argv[1:cmd_idx]
    #If we have --cmd, then we're being called by lcmd/lrun, with lscript and there may be extra command
    #line arguments that only lscript knows how to parse.
    args,_ = parser.parse_known_args(arglist)
    if args.interactive:
        raise Exception("lint was passed a --cmd, but it cannot take a cmd")
else:
    arglist = sys.argv[1:]
    #If we don't have --cmd, then we're being called by lint (with no lscript), so we should know
    #how to parse all arguments.
    args = parser.parse_args(arglist)

cmd = ""

days = args.hours//24
hours = args.hours % 24
mins = args.mins
cmd = cmd + f" --time={days}-{hours:>02}:{mins:>02}:00"
cmd = cmd + f" --cpus-per-task={args.cpus}"

if args.memory is not None:
    cmd = cmd + f" --mem={args.memory}G"

if args.gpus is not None:
    cmd = cmd + f" --gpus={args.gpus}"

print(cmd + " ")
